version: "0.1.0"

services:
  # ********************
  # Telemetry Components
  # ********************
  # Collector
  collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: collector
    command: ["--config=/conf/collector-config.yaml"]
    volumes:
      - ./collector/collector-config.yaml:/conf/collector-config.yaml
      - ./collector/metrics.json:/metrics.json
    ports:
      # - "9464:9464" #prometheus
      - "4317:4317" #OLTP gRPC
      - "4318:4318" # OTLP HTTP
    environment:
      - PROMUSERNAME
      - PROMPASSWORD
      - PROMENDPOINT

  # Prometheus DB
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
    volumes:
      - ./prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml

  # ********************
  # Dashboard
  # ********************
  # Svelte frontend
  svelte-ui:
    container_name: svelte-ui
    build:
      context: ./dashboard/frontend
      dockerfile: Dockerfile
      args:
        - PUBLIC_URL=${PUBLIC_URL}
    ports:
      - "80:80"
    # Want the examples to be running before starting DB
    depends_on:
      - flask_server
      - api
    environment:
      - PUBLIC_URL

  # Go backend
  api:
    container_name: api
    build:
      context: ./dashboard/backend
      dockerfile: Dockerfile
    ports:
      - "54321:54321"

  # Dev mode for Svelte
  # svelte-dev:
  #   container_name: svelte-dev
  #   build:
  #     context: ./dashboard/frontend
  #     dockerfile: DevDockerfile
  #   ports:
  #     - "5173:5173"

  # ********************
  # Example Apps
  # ********************
  # Python
  flask_server:
    container_name: flask_server
    build:
      context: ./python
      dockerfile: ./examples/http_server/Dockerfile
    # need api and collector running to start getting metrics
    depends_on:
      - collector
      - api
    ports:
      - "4949:4949"

  # NodeJS
  express_server:
    container_name: express_server
    build:
      context: ./js
      dockerfile: ./examples/express_server/Dockerfile
    depends_on:
      - collector
      - api
    ports:
      - "8586:8586"
